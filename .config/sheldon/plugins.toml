shell = "zsh"

[templates]
defer = "{{ hooks?.pre | nl }}{% for file in files %}zsh-defer source \"{{ file }}\"\n{% endfor %}{{ hooks?.post | nl }}"

[plugins]
[plugins.zsh-defer]
github = "romkatv/zsh-defer"

[plugins.asdf]
github = "asdf-vm/asdf"
use = ["asdf.sh"]
apply = ["defer"]

[plugins.asdf.hooks]
pre = """
  export ASDF_DIR="${XDG_DATA_HOME}/sheldon/repos/github.com/asdf-vm/asdf"
  export ASDF_DATA_DIR="${XDG_DATA_HOME}/asdf"
"""
post = """
  export ASDF_CONFIG_FILE="${XDG_CONFIG_HOME}/asdf/.asdfrc"
  export ASDF_DEFAULT_TOOL_VERSIONS_FILENAME=".config/asdf/.tool-versions"
"""

[plugins.docker-sh]
inline = """
function docker-sh() {
  shell=${1:-sh}
  container_id=$(command docker container ls | perl -alne 'print unless $. == 1' | fzf --ansi --height 40% | perl -alne 'print $F[0]')
  if [[ ! -n $container_id ]]; then
    return 1
  fi
  command docker exec -it ${container_id} $shell
}
"""

[plugins.editor]
local = "~/dotfiles/.config/zsh/zle"
use = ["_editor"]
apply = ["defer"]

[plugins.editor.hooks]
post = """
  bindkey '^o' _editor
"""

[plugins.fzf]
remote = "https://github.com/junegunn/fzf/raw/master/shell/key-bindings.zsh"
apply = ["defer"]

[plugins.fzf.hooks]
post = """
  brew require rg ripgrep || return 1
  export FZF_DEFAULT_COMMAND='rg --hidden --no-ignore --files'
"""

[plugins.ghq]
local = "~/dotfiles/.config/zsh/zle"
use = ["_fzf_ghq_lookup"]
apply = ["defer"]

[plugins.ghq.hooks]
pre = """
  brew require ghq || return 1
  mkdir -p "${HOME}/repos"
"""
post = """
  bindkey '^G' _fzf_ghq_lookup
"""

[plugins.gh-copilot-suggest]
local = "~/dotfiles/.config/zsh/zle"
use = ["_gh_copilot_suggest"]
apply = ["defer"]

[plugins.gh-copilot-suggest.hooks]
pre = """
  if [[ ! -d "${XDG_DATA_HOME}/gh/extensions/gh-copilot" ]]; then
    log.info "Installing gh copilot extension"
    gh extension install github/gh-copilot &> /dev/null
    log.info "gh copilot extension installed"
  fi
"""
post = """
  bindkey '^s' _gh_copilot_suggest
"""

[plugins.git-prompt]
remote = "https://github.com/git/git/raw/master/contrib/completion/git-prompt.sh"

[plugins.git-prompt.hooks]
post = """
  export GIT_PS1_SHOWUPSTREAM=1
  export GIT_PS1_SHOWDIRTYSTATE=1

  setopt prompt_subst
  readonly local __time='%{$fg[green]%}[%*]%{${reset_color}%}'
  readonly local __dirname='%{$fg[red]%}%c%{${reset_color}%}'
  readonly local __gitbranch='%{$fg[yellow]%}$(__git_ps1 "(%s) ")%{${reset_color}%}'
  readonly local __prompt='%{$fg[cyan]%}‚ù≠%{${reset_color}%}'
  PROMPT="${__time} ${__dirname} ${__gitbranch}\n${__prompt} "
"""

[plugins."olets/zsh-abbr"]
github = "olets/zsh-abbr"
use = ["zsh-abbr.plugin.zsh"]
apply = ["defer"]

[plugins."olets/zsh-abbr".hooks]
pre = """
  export ABBR_AUTO_LOAD=1
"""
post = """
  brew require eza || return 1
"""

[plugins.pet]
local = "~/dotfiles/.config/zsh/zle"
use = ["_pet_select"]
apply = ["defer"]

[plugins.pet.hooks]
pre = """
  brew require pet knqyf263/pet/pet || return 1
"""
post = """
  bindkey '^p' _pet_select
"""

[plugins."zsh-users/zsh-autosuggestions"]
github = "zsh-users/zsh-autosuggestions"
apply = ["defer"]

[plugins."zsh-users/zsh-completions"]
github = "zsh-users/zsh-completions"
apply = ["defer"]

[plugins."zsh-users/zsh-syntax-highlighting"]
github = "zsh-users/zsh-syntax-highlighting"
apply = ["defer"]

[plugins."zsh-users/zsh-syntax-highlighting".hooks]
post = """
  typeset -gA ZSH_HIGHLIGHT_STYLES
  ZSH_HIGHLIGHT_STYLES[path]='none'
  ZSH_HIGHLIGHT_STYLES[alias]='fg=cyan,bold'
  ZSH_HIGHLIGHT_STYLES[arg0]='fg=cyan,bold'
"""
